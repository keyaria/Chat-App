[{"/Users/keywalker/Documents/GitHub/Chat-App/src/index.tsx":"1","/Users/keywalker/Documents/GitHub/Chat-App/src/reportWebVitals.ts":"2","/Users/keywalker/Documents/GitHub/Chat-App/src/App.tsx":"3","/Users/keywalker/Documents/GitHub/Chat-App/src/models.tsx":"4","/Users/keywalker/Documents/GitHub/Chat-App/src/features/Chat/Chat.module.ts":"5","/Users/keywalker/Documents/GitHub/Chat-App/src/theme.tsx":"6","/Users/keywalker/Documents/GitHub/Chat-App/src/features/Chat/pages/Chat.ts":"7","/Users/keywalker/Documents/GitHub/Chat-App/src/features/Chat/pages/ChatPage.tsx":"8","/Users/keywalker/Documents/GitHub/Chat-App/src/components/SelectUser/SelectUser.tsx":"9","/Users/keywalker/Documents/GitHub/Chat-App/src/components/SelectUser/SelectUserStyle.ts":"10","/Users/keywalker/Documents/GitHub/Chat-App/src/components/SelectChannel/SelectChannel.tsx":"11","/Users/keywalker/Documents/GitHub/Chat-App/src/components/SelectChannel/SelectChannelStyle.ts":"12"},{"size":819,"mtime":1652711963719,"results":"13","hashOfConfig":"14"},{"size":425,"mtime":1652709650623,"results":"15","hashOfConfig":"14"},{"size":1471,"mtime":1652946336397,"results":"16","hashOfConfig":"14"},{"size":8291,"mtime":1652842212406,"results":"17","hashOfConfig":"14"},{"size":160,"mtime":1652876677455,"results":"18","hashOfConfig":"14"},{"size":219,"mtime":1652876787455,"results":"19","hashOfConfig":"14"},{"size":1841,"mtime":1652949244567,"results":"20","hashOfConfig":"14"},{"size":1814,"mtime":1652949107159,"results":"21","hashOfConfig":"14"},{"size":312,"mtime":1652877664950,"results":"22","hashOfConfig":"14"},{"size":130,"mtime":1652944149911,"results":"23","hashOfConfig":"14"},{"size":799,"mtime":1652946960581,"results":"24","hashOfConfig":"14"},{"size":641,"mtime":1652945876009,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"sbl63y",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"29"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/keywalker/Documents/GitHub/Chat-App/src/index.tsx",[],[],[],"/Users/keywalker/Documents/GitHub/Chat-App/src/reportWebVitals.ts",[],[],"/Users/keywalker/Documents/GitHub/Chat-App/src/App.tsx",["64"],[],"/Users/keywalker/Documents/GitHub/Chat-App/src/models.tsx",[],[],"/Users/keywalker/Documents/GitHub/Chat-App/src/features/Chat/Chat.module.ts",["65","66"],[],"/Users/keywalker/Documents/GitHub/Chat-App/src/theme.tsx",[],[],"/Users/keywalker/Documents/GitHub/Chat-App/src/features/Chat/pages/Chat.ts",[],[],"/Users/keywalker/Documents/GitHub/Chat-App/src/features/Chat/pages/ChatPage.tsx",["67","68","69","70"],[],"/Users/keywalker/Documents/GitHub/Chat-App/src/components/SelectUser/SelectUser.tsx",[],[],"/Users/keywalker/Documents/GitHub/Chat-App/src/components/SelectUser/SelectUserStyle.ts",[],[],"/Users/keywalker/Documents/GitHub/Chat-App/src/components/SelectChannel/SelectChannel.tsx",["71"],[],"import React, { FC } from 'react';\nimport { ChannelId } from '../../models';\nimport { Menu, Title } from './SelectChannelStyle';\nimport { useGlobalState } from '../../App'\ninterface SelectChannelProps {}\n\nconst SelectChannel: FC<SelectChannelProps> = () => {\n  \n  const [state, dispatch] = useGlobalState();\n\n  return(\n  <div className=\"SelectChannel\" data-testid=\"SelectChannel\" >\n    <Title> 2. Choose Your Channel</Title>\n    <Menu>\n        <li onClick={() => dispatch({ channel:  ChannelId.General})}><p>{ChannelId.General}</p></li>\n        <li onClick={() => dispatch({ channel:  ChannelId.Technology})}><p>{ChannelId.Technology}</p></li>\n        <li onClick={() => dispatch({ channel:  ChannelId.Lgtm})}><p>{ChannelId.Lgtm}</p></li>\n    </Menu>\n  </div>\n  );\n};\n\nexport default SelectChannel;\n","/Users/keywalker/Documents/GitHub/Chat-App/src/components/SelectChannel/SelectChannelStyle.ts",[],[],{"ruleId":"72","severity":1,"message":"73","line":50,"column":38,"nodeType":"74","messageId":"75","endLine":50,"endColumn":67},{"ruleId":"76","severity":1,"message":"77","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":13},{"ruleId":"80","severity":1,"message":"81","line":4,"column":1,"nodeType":"82","endLine":10,"endColumn":3},{"ruleId":"76","severity":1,"message":"83","line":4,"column":10,"nodeType":"78","messageId":"79","endLine":4,"endColumn":37},{"ruleId":"76","severity":1,"message":"84","line":5,"column":10,"nodeType":"78","messageId":"79","endLine":5,"endColumn":19},{"ruleId":"76","severity":1,"message":"85","line":16,"column":17,"nodeType":"78","messageId":"79","endLine":16,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":43,"column":17,"nodeType":"74","endLine":43,"endColumn":52},{"ruleId":"76","severity":1,"message":"88","line":9,"column":10,"nodeType":"78","messageId":"79","endLine":9,"endColumn":15},"react/jsx-pascal-case","Imported JSX component routeProps must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useMessagesFetchLatestQuery' is defined but never used.","'ChannelId' is defined but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'state' is assigned a value but never used."]